{"version":3,"sources":["img/rock.png","img/paper.png","img/scissors.png","Choice.js","img/rock.svg","img/paper.svg","img/scissors.svg","Button.js","Game.js","index.js"],"names":["Choice","imgSrc","rock","paper","scissors","this","props","value","classes","orientation","className","player","src","alt","Component","Button","onClick","e","Game","buttonClicked","playerChoice","choices","aiChoice","Math","floor","random","length","newState","state","setState","reset","initialState","round","wins","losses","ties","won","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","active","config","style","textAlign","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,G,MAAA,IAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,qC,OCsB1BA,E,4JAhBX,WACI,IAAIC,EAAS,CACT,KAAQC,EACR,MAASC,EACT,SAAYC,GACdC,KAAKC,MAAMC,OAETC,EAAO,iBAAaH,KAAKC,MAAMG,aAEnC,OAAO,sBAAKC,UAAWF,EAAhB,UACH,oBAAIE,UAAU,iBAAd,SAAgCL,KAAKC,MAAMK,SAC3C,qBAAKC,IAAKX,EAAQY,IAAKR,KAAKC,MAAMC,e,GAZzBO,aCLN,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,qCCmB1BC,E,4JAbX,WAAU,IAAD,OACDd,EAAS,CACT,KAAQC,EACR,MAASC,EACT,SAAYC,GACdC,KAAKC,MAAMC,OAEb,OAAO,wBAAQG,UAAU,gBAAgBM,QAAS,SAAAC,GAAM,EAAKX,MAAMU,QAAQ,EAAKV,MAAMC,QAA/E,SACH,qBAAKK,IAAKX,EAAQY,IAAKR,KAAKC,MAAMC,c,GATzBO,a,gBCkGNI,E,kDAhGX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IA2BVa,cAAgB,SAACC,GACb,IAAIC,EAAU,CAAC,OAAQ,QAAS,YAE5BC,EAAWD,EADHE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAQK,SAG3CC,EAAQ,2BACL,EAAKC,OADA,IAER,aAAgBR,EAChB,SAAYE,EACZ,MAAS,EAAKM,MAAL,MAAsB,IAG/BR,IAAiBE,GACjBK,EAAQ,OACRA,EAAQ,KAAU,GAEA,SAAjBP,GAAwC,aAAbE,GACV,UAAjBF,GAAyC,SAAbE,GACX,aAAjBF,GAA4C,UAAbE,GAEhCK,EAAQ,OACRA,EAAQ,KAAU,IAElBA,EAAQ,SACRA,EAAQ,KAAU,GAGtB,EAAKE,SAASF,IAvDC,EA0DnBG,MAAQ,WACJ,EAAKD,SAAS,EAAKE,eAzDnB,EAAKA,aAAe,CAChBC,MAAO,EACPC,KAAM,EACNC,OAAQ,EACRC,KAAM,EACNf,aAAc,OACdE,SAAU,OACVc,KAAK,GAET,EAAKR,MAAQ,EAAKG,aAElB,EAAKM,eAAiB,CAClBC,MAAO,KACPC,OAAQ,IACRC,cAAe,KACfC,aAAc,MACdC,aAAc,IACdC,SAAU,OACVC,QAAS,EACTC,MAAO,MACPC,OAAQ,MACRC,YAAa,QACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAxB1C,E,0CA8DnB,WACI,OAAO,gCACH,cAAC,IAAD,CAAUC,OAAS5C,KAAKuB,MAAMQ,IAAMc,OAAS7C,KAAKgC,eAAiB3B,UAAU,aAC7E,uBAAOA,UAAU,aAAjB,SACA,gCACI,+BACI,6BAAI,cAAC,EAAD,CAAQH,MAAOF,KAAKuB,MAAMR,aAAcX,YAAY,QAAQE,OAAO,aACvE,qBAAIwC,MAAO,CAACC,UAAW,UAAvB,UACI,qBAAI1C,UAAU,UAAd,mBAA+BL,KAAKuB,MAAMI,SAC1C,sBAAKtB,UAAU,UAAf,UACI,cAAC,EAAD,CAAQH,MAAM,OAAOS,QAASX,KAAKc,gBACnC,cAAC,EAAD,CAAQZ,MAAM,QAAQS,QAASX,KAAKc,gBACpC,cAAC,EAAD,CAAQZ,MAAM,WAAWS,QAASX,KAAKc,mBAE3C,gCACI,uBACA,4CAAuB,sBAAMT,UAAU,UAAU2C,GAAG,OAA7B,SAAqChD,KAAKuB,MAAMK,OACvE,uBACA,4CAAuB,sBAAMvB,UAAU,UAAU2C,GAAG,OAA7B,SAAqChD,KAAKuB,MAAMO,OACvE,uBACA,8CAAyB,sBAAMzB,UAAU,UAAU2C,GAAG,SAA7B,SAAuChD,KAAKuB,MAAMM,SAC3E,uBACA,wBAAQlB,QAASX,KAAKyB,MAAOpB,UAAU,aAAvC,4BAGR,6BAAI,cAAC,EAAD,CAAQH,MAAOF,KAAKuB,MAAMN,SAAUb,YAAY,OAAOE,OAAO,uB,GAxFnEG,aCDnBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35a1079c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rock.caf61e75.png\";","export default __webpack_public_path__ + \"static/media/paper.7371c2ba.png\";","export default __webpack_public_path__ + \"static/media/scissors.4d3af62c.png\";","import React, { Component } from 'react';\nimport rock from './img/rock.png';\nimport paper from './img/paper.png';\nimport scissors from './img/scissors.png';\n\nclass Choice extends Component {\n    render() {\n        let imgSrc = {\n            'rock': rock,\n            'paper': paper,\n            'scissors': scissors,\n        }[this.props.value]\n        \n        let classes = `choice ${this.props.orientation}`\n        \n        return <div className={classes}>\n            <h2 className=\"player counter\">{this.props.player}</h2>\n            <img src={imgSrc} alt={this.props.value} />\n        </div>\n    }\n}\n\nexport default Choice;","export default __webpack_public_path__ + \"static/media/rock.2f083d90.svg\";","export default __webpack_public_path__ + \"static/media/paper.53be645e.svg\";","export default __webpack_public_path__ + \"static/media/scissors.a227635b.svg\";","import React, { Component } from 'react';\nimport rock from './img/rock.svg';\nimport paper from './img/paper.svg';\nimport scissors from './img/scissors.svg';\n\nclass Button extends Component {\n    render() {\n        let imgSrc = {\n            'rock': rock,\n            'paper': paper,\n            'scissors': scissors,\n        }[this.props.value]\n        \n        return <button className=\"choice-button\" onClick={e => {this.props.onClick(this.props.value)}}>\n            <img src={imgSrc} alt={this.props.value} />\n        </button>\n    }\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport './game.css';\nimport Choice from './Choice.js';\nimport Button from './Button.js';\nimport Confetti from 'react-dom-confetti';\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            round: 1,\n            wins: 0,\n            losses: 0,\n            ties: 0,\n            playerChoice: \"rock\",\n            aiChoice: \"rock\",\n            won: false,\n        };\n        this.state = this.initialState\n\n        this.confettiConfig = {\n            angle: \"90\",\n            spread: 360,\n            startVelocity: \"36\",\n            elementCount: \"100\",\n            dragFriction: 0.12,\n            duration: \"2000\",\n            stagger: 3,\n            width: \"8px\",\n            height: \"8px\",\n            perspective: \"500px\",\n            colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n          };\n    }\n\n    buttonClicked = (playerChoice) => {\n        let choices = ['rock', 'paper', 'scissors']\n        let index = Math.floor(Math.random() * choices.length);\n        let aiChoice = choices[index];\n\n        let newState = {\n            ...this.state,\n            'playerChoice': playerChoice,\n            'aiChoice': aiChoice,\n            'round': this.state['round'] + 1,\n        }\n\n        if (playerChoice === aiChoice) {\n            newState['ties']++\n            newState['won'] = false\n        } else if (\n            (playerChoice === \"rock\" && aiChoice === \"scissors\") ||\n            (playerChoice === \"paper\" && aiChoice === \"rock\") ||\n            (playerChoice === \"scissors\" && aiChoice === \"paper\")\n        ) {\n            newState['wins']++\n            newState['won'] = true\n        } else {\n            newState['losses']++\n            newState['won'] = false\n        }\n\n        this.setState(newState)\n    }\n    \n    reset = () => {\n        this.setState(this.initialState);\n    }\n\n    render() {\n        return <div>\n            <Confetti active={ this.state.won } config={ this.confettiConfig } className=\"confetti\"/>\n            <table className=\"game-table\">\n            <tbody>\n                <tr>\n                    <td><Choice value={this.state.playerChoice} orientation=\"right\" player=\"Player\" /></td>\n                    <td style={{textAlign: \"center\"}}>\n                        <h1 className=\"counter\">Round {this.state.round}</h1>\n                        <div className=\"buttons\">\n                            <Button value=\"rock\" onClick={this.buttonClicked} />\n                            <Button value=\"paper\" onClick={this.buttonClicked} />\n                            <Button value=\"scissors\" onClick={this.buttonClicked} />\n                        </div>\n                        <div>\n                            <hr />\n                            <strong>Wins: </strong><span className=\"counter\" id=\"wins\">{this.state.wins}</span>\n                            <hr />\n                            <strong>Ties: </strong><span className=\"counter\" id=\"ties\">{this.state.ties}</span>\n                            <hr />\n                            <strong>Losses: </strong><span className=\"counter\" id=\"losses\">{this.state.losses}</span>\n                            <hr />\n                            <button onClick={this.reset} className=\"start-over\">New Game</button>\n                        </div>\n                    </td>\n                    <td><Choice value={this.state.aiChoice} orientation=\"left\" player=\"AI\" /></td>\n                </tr>\n            </tbody>\n        </table>\n        </div>\n        \n    }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}